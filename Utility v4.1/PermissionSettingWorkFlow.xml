<?xml version="1.0" encoding="utf-8"?>
<WorkFlow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Ident="PermissionSettingWorkFlow" xmlns:dsp="http://www.gappex.com/sfp/DataSource/Parameters" FormIdent="PermissionSetting" PackageIdent="Utility">
  <Definition>
    <States>
      <State Value="0" TitleResourceKey="Deleted_Utility" />
      <State Value="1" TitleResourceKey="New_Utility" />
    </States>
  </Definition>

  <GlobalJavaScripts>
    <JavaScript xsi:type="ShowHide" Ident="ShowDates" ControlIdent="IsComputed" >
      <Selectors>
        <string>.js-showHideRole</string>
      </Selectors>
      <ShowValues>
        <string>0</string>
      </ShowValues>
    </JavaScript>
  </GlobalJavaScripts>    


  <Steps>
    <Step State="1">
      <Groups>
        <Group>
          <Permissions>
            <string>SuperAdmin</string>
          </Permissions>
          <Buttons>
            <Button Ident="CreateButton" IsVisible="true">
              <Actions>
                <Action xsi:type="Required" ActionStart="BeforeValidation">
                  <Idents>
                    <string>NewID</string>
                    <string>IsComputed</string>
                  </Idents>
                </Action>    

                <Action ActionStart="BeforeValidation" ErrorMessageResourceKey="DuplicationPrimaryKeyError_Utility" xsi:type="GlobalValidation">
                  <Condition>
                    <SQL>
                      SELECT IIF(
                        EXISTS(SELECT NULL FROM dbo.[Role] WHERE PermissionID = @NewID)
                        OR EXISTS(SELECT NULL FROM dbo.[AspNetRoles] WHERE [Name] = 'Role' + @NewID)
                        OR EXISTS(SELECT NULL FROM dbo.[Permission] WHERE ID = @NewID)
                      ,0,1)
                    </SQL>
                    <Parameters>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="NewID" DataType="String" MaxLength="256"/>
                    </Parameters>
                  </Condition>
                  <ControlIdents>
                    <string>NewID</string>
                  </ControlIdents>
                </Action>

                <Action xsi:type="ActionTrigger" Ident="CreatePermission" ActionStart="AfterSave">
                  <DataSource>
                    <SQL>
                      DECLARE @Name nvarchar(256) = @NewID
                      DECLARE @ParentRoleName nvarchar(256) = IIF(@ParentID IS NULL, NULL, 'Role' + @ParentID)
                      SET @Weight = ISNULL(@Weight, 4)

                      DECLARE @Id nvarchar(450) = NEWID()
                      DECLARE @RoleName nvarchar(256)
                      DECLARE @ParentASPNETRoleID nvarchar(256)
                      SET @VisibleType = ISNULL(@VisibleType, 3)
                      SET @RoleName = 'Role'+@Name

                      IF @IsComputed = 0
                      BEGIN
                        INSERT INTO AspNetRoles (Id, Name, NormalizedName, ConcurrencyStamp)
                        VALUES(@Id, @RoleName, UPPER(@RoleName), NEWID())
                      END

                      INSERT INTO dbo.Permission(ID, [Weight], ResourceKey, IsComputed)
                      VALUES (@Name, @Weight, 'Permission'+@Name, IIF(@IsComputed = 1, 1, 0))

                      IF @ParentRoleName is not null BEGIN
                        SET @ParentASPNETRoleID = (SELECT Id FROM AspNetRoles WHERE Name = @ParentRoleName)
                      END

                      IF @IsComputed = 0
                      BEGIN
                        INSERT INTO [Role](ASPNETRoleID, ParentASPNETRoleID, ResourceKey, PermissionID, VisibleType, DefaultValue)
                        VALUES (@Id, @ParentASPNETRoleID, @RoleName, @Name, @VisibleType, @DefaultValue)
                      END

                    </SQL>
                    <Parameters>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="NewID" DataType="String" MaxLength="256"/>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="ParentID" DataType="String" MaxLength="256"/>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="Weight" DataType="Number" />
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="VisibleType" DataType="Number" />
                      
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="IsComputed" DataType="Number" />
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="DefaultValue" DataType="Bool" />
                    </Parameters>
                  </DataSource>
                </Action>

              </Actions>
            </Button>
            <Button Ident="DeleteAndCreateButton" IsVisible="true">
              <Actions>
                <Action xsi:type="Required" ActionStart="BeforeValidation">
                  <Idents>
                    <string>OldID</string>
                    <string>NewID</string>
                    <string>Weight</string>
                    <string>IsComputed</string>
                  </Idents>
                </Action>

                <Action ActionStart="BeforeValidation" ErrorMessageResourceKey="DuplicationPrimaryKeyError_Utility" xsi:type="GlobalValidation">
                  <Condition>
                    <SQL>
                      SELECT IIF(
                        (
                          EXISTS(SELECT NULL FROM dbo.[Role] WHERE PermissionID = @NewID)
                          OR EXISTS(SELECT NULL FROM dbo.[AspNetRoles] WHERE [Name] = 'Role' + @NewID)
                          OR EXISTS(SELECT NULL FROM dbo.[Permission] WHERE ID = @NewID)
                        )
                        AND @NewID != @OldID
                      ,0,1)
                    </SQL>
                    <Parameters>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="OldID" DataType="String" MaxLength="256"/>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="NewID" DataType="String" MaxLength="256"/>
                    </Parameters>
                  </Condition>
                  <ControlIdents>
                    <string>NewID</string>
                  </ControlIdents>
                </Action>

                <Action ActionStart="BeforeValidation" ErrorMessageResourceKey="PermissionEditError_Utility" xsi:type="GlobalValidation">
                  <Condition>
                    <SQL>
                      SELECT IIF(
                        (
                          EXISTS(SELECT NULL FROM dbo.[Role] WHERE PermissionID = @OldID AND ASPNETRoleID IN (SELECT ParentASPNETRoleID FROM dbo.[Role]))
                        ) AND @OldID != @NewID
                      ,0,1)
                    </SQL>
                    <Parameters>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="OldID" DataType="String" MaxLength="256"/>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="NewID" DataType="String" MaxLength="256"/>
                    </Parameters>
                  </Condition>
                  <ControlIdents>
                    <string>OldID</string>
                  </ControlIdents>
                </Action>

                <Action xsi:type="ActionTrigger" Ident="DeleteAndCreatePermission" ActionStart="AfterSave">
                  <DataSource>
                    <SQL>
                      DECLARE @Name nvarchar(256) = @NewID
                      DECLARE @ParentRoleName nvarchar(256) = IIF(@ParentID IS NULL, NULL, 'Role' + @ParentID)
                      SET @Weight = ISNULL(@Weight, 4)

                      DECLARE @Id nvarchar(450) = NEWID()
                      DECLARE @RoleName nvarchar(256)
                      DECLARE @ParentASPNETRoleID nvarchar(256)
                      SET @VisibleType = ISNULL(@VisibleType, 3)
                      SET @RoleName = 'Role'+@Name

                      IF @OldID != @NewID
                      BEGIN

                        DELETE FROM dbo.[Role]
                        WHERE PermissionID = @OldID

                        DELETE FROM dbo.Permission
                        WHERE ID = @OldID

                        DELETE FROM dbo.AspNetRoles
                        WHERE [Name] = 'Role' + @OldID

                        IF @IsComputed = 0
                        BEGIN
                          INSERT INTO AspNetRoles (Id, Name, NormalizedName, ConcurrencyStamp)
                          VALUES(@Id, @RoleName, UPPER(@RoleName), NEWID())
                        END

                        INSERT INTO dbo.Permission(ID, [Weight], ResourceKey, IsComputed)
                        VALUES (@Name, @Weight, 'Permission'+@Name, IIF(@IsComputed = 1, 1, 0))

                        IF @ParentRoleName is not null BEGIN
                          SET @ParentASPNETRoleID = (SELECT Id FROM AspNetRoles WHERE Name = @ParentRoleName)
                        END

                        IF @IsComputed = 0
                        BEGIN
                          INSERT INTO [Role](ASPNETRoleID, ParentASPNETRoleID, ResourceKey, PermissionID, VisibleType, DefaultValue)
                          VALUES (@Id, @ParentASPNETRoleID, @RoleName, @Name, @VisibleType, @DefaultValue)
                        END

                      END

                      IF @OldID = @NewID
                      BEGIN
                        IF @IsComputed = 0
                        BEGIN
                          UPDATE dbo.[Role]
                            SET 
                              ParentASPNETRoleID = (SELECT ASPNETRoleID FROM dbo.Role WHERE PermissionID = @ParentID)
                              ,VisibleType = @VisibleType
                              ,DefaultValue = @DefaultValue
                          WHERE PermissionID = @OldID
                        END

                        UPDATE dbo.Permission
                          SET
                            [Weight] = @Weight
                            ,IsComputed = IIF(@IsComputed = 1, 1, 0)
                        WHERE ID = @OldID
                      END
                    </SQL>
                    <Parameters>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="OldID" DataType="String" MaxLength="256"/>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="NewID" DataType="String" MaxLength="256"/>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="ParentID" DataType="String" MaxLength="256"/>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="Weight" DataType="Number" />
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="VisibleType" DataType="Number" />
                      
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="IsComputed" DataType="Bool" />
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="DefaultValue" DataType="Bool" />
                    </Parameters>
                  </DataSource>
                </Action>
              </Actions>
            </Button>
            <Button Ident="DeleteButton" IsVisible="true">
              <Actions>
                <Action xsi:type="Required" ActionStart="BeforeValidation">
                  <Idents>
                    <string>OldID</string>
                  </Idents>
                </Action>

                <Action ActionStart="BeforeValidation" ErrorMessageResourceKey="PermissionDeleteError_Utility" xsi:type="GlobalValidation">
                  <Condition>
                    <SQL>
                      SELECT IIF(
                        EXISTS(
                          SELECT NULL 
                          FROM dbo.[Role] 
                          WHERE ParentASPNETRoleID = (SELECT ASPNETRoleID FROM dbo.[Role] WHERE PermissionID = @OldID))
                      ,0,1)
                    </SQL>
                    <Parameters>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="OldID" DataType="String" MaxLength="256"/>
                    </Parameters>
                  </Condition>
                  <ControlIdents>
                    <string>OldID</string>
                  </ControlIdents>
                </Action>

                <Action xsi:type="ActionTrigger" Ident="DeletePermission" ActionStart="AfterSave">
                  <DataSource>
                    <SQL>
                      DECLARE @Name nvarchar(256) = @OldID
                      DECLARE @RoleName nvarchar(256)
                      SET @RoleName = 'Role'+@Name

                      DELETE FROM dbo.[Role]
                      WHERE PermissionID = @Name

                      DELETE FROM dbo.Permission
                      WHERE ID = @Name

                      DELETE FROM dbo.AspNetRoles
                      WHERE [Name] = @RoleName


                    </SQL>
                    <Parameters>
                      <dsp:Parameter xsi:type="dsp:VariableParameter" Ident="OldID" DataType="String" MaxLength="256"/>
                    </Parameters>
                  </DataSource>
                </Action>

              </Actions>
            </Button>
          </Buttons>
        </Group>
      </Groups>
    </Step>
  </Steps>
</WorkFlow>